---
# install nginx with passenge
# run as sudo redmine_adm

- name: which gem
  shell: which gem

- name: install nginx-passenger prerequisites
  apt: pkg={{ item }} state=present
  sudo_user: root
  with_items:
    - libcurl4-openssl-dev

- name: install rake gem
  gem: name=rake state=latest user_install=no

- name: install builder gem
  gem: name=builder state=latest user_install=no

- name: install passenger gem
  gem: name=passenger state=latest user_install=no
  register: pv_out

- name: get installed ruby version
  shell: rvm current
  register: rvm_current_out
  tags:
    - cf

#- name: get installed passenger version
#  shell: gem list -l passenger | tail -n1 | cut -d "(" -f 2 | cut -d ")" -f 1 | cut -d ',' -f 1
#  register: pv_out
#  tags:
#    - cf

# register vars which will be used by the nginx (+passenger) installation
- set_fact: ruby_current={{ rvm_current_out.stdout }} passenger_version={{ pv_out.version }}
  tags:
    - cf

- name: install nginx
  shell: 
    creates={{ nginx_dir }}/sbin/nginx   
    ~/.rvm/gems/{{ ruby_current }}/bin/passenger-install-nginx-module
    --auto-download --prefix={{ nginx_dir }} --auto
  when: not always_reinstall_nginx
  notify: restart nginx

- name: (re-)install nginx
  shell: 
    ~/.rvm/gems/{{ ruby_current }}/bin/passenger-install-nginx-module
    --auto-download --prefix={{ nginx_dir }} --auto
  when: always_reinstall_nginx or pv_out|changed
  notify: restart nginx

- name: copy dhparam file
  copy: src={{ ssl_dhparam_file }} dest={{ nginx_dir }}/conf/dhparam
  when: ssl_local_dhparam_file

- name: create dhparam
  command: creates={{ nginx_dir }}/conf/dhparam
    openssl dhparam -out {{ nginx_dir }}/conf/dhparam 2048

- name: setup nginx configuration files
  template: src={{ item }}.j2 dest={{ nginx_dir }}/conf/{{ item }}
  with_items: 
    - nginx.conf
    - ssl_params
  notify: restart nginx

- name: generate self signed certificate
  command: "creates={{ ssl_certificate }} openssl req -x509 -nodes -days 365 -subj /CN={{ server_name }} -newkey rsa:2048 \ 
    -keyout {{ ssl_certificate_key }} -out {{ ssl_certificate }}"
  when: ssl_create_self_signed_cert

- name: setup nginx configuration file
  template: src=nginx.conf.j2 dest={{ nginx_dir }}/conf/nginx.conf
  notify: restart nginx

- name: add redmine admin to supervisor group
  user: name=redmine_adm groups=supervisor state=present append=true
  sudo_user: root

- name: create supervisor redmine-nginx process config file
  template: src=redmine-nginx.conf.j2 dest=/etc/supervisor/conf.d/redmine-nginx.conf
  notify: restart supervisor
  sudo_user: root

- name: kill leftover nginx
  command: killall nginx
  sudo_user: root
  ignore_errors: yes

- name: wait 5 seconds ...
  pause: seconds=5

- name: kill -9 leftover nginx
  command: killall nginx
  sudo_user: root
  ignore_errors: yes

# run pending nginx restart handler
- meta: flush_handlers

# vim: set filetype=yaml sw=2 ts=2 sts=2 expandtab:
